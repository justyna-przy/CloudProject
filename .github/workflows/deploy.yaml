name: Docker Image Building

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  IMG_NAME: 'aws'
  USERNAME: "justtyna22"
  AWS_REGION: 'us-east-1'  # Replace with your AWS region
  ECR_REPOSITORY: 'cloudproject'  # Replace with your ECR repository name
  IMAGE_TAG: 'latest'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set App Name
        run: 'echo "IMG_NAME=$(echo ${USERNAME})/$(echo ${IMG_NAME})" >> $GITHUB_ENV'

      - name: Create .env file
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "DEBUG=${{ secrets.DEBUG }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo ALLOWED_HOSTS=localhost,127.0.0.1 >> .env

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker build -t ${{ env.IMG_NAME }}:latest .

      - name: Push Docker image to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.IMG_NAME }}:latest

      - name: Configure AWS credentials
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
          echo "aws_session_token=${{ secrets.AWS_SESSION_TOKEN }}" >> ~/.aws/credentials
          echo "[default]" > ~/.aws/config
          echo "region=${{ env.AWS_REGION }}" >> ~/.aws/config

      - name: Login to Amazon ECR
        id: ecr-login
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Tag Docker image for ECR
        run: |
          docker tag ${{ env.IMG_NAME }}:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Set up Kubernetes context
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: Package Helm chart
        run: helm package ./chinchilla-site

      - name: Deploy to Kubernetes with Helm
        run: |
          helm upgrade --install chinchilla-site ./chinchilla-site-0.1.0.tgz \
            --set image.repository=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY \
            --set image.tag=$IMAGE_TAG